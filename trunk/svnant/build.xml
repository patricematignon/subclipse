<project name="svnant" default="all" basedir=".">

  <dirname file="${ant.file.svnant}" property="dir.project"/>
  
  <!-- prefer the settings from the user if there are some. -->
  <property file="svnant-${user.name}.properties"/>
  
  <!-- import the default properties -->
  <property file="svnant.properties" />

  <!-- load the environment. -->
  <property environment="env"/>

  <!-- ======================================================================================= -->
  <!-- path declarations                                                                       -->
  <!-- ======================================================================================= -->
  
  <path id="project.classpath">
    <fileset dir="${dir.project}/lib" includes="*.jar"/>
  </path>
  
  <path id="path.xinclude">
    <fileset dir="${dir.project}/lib/xincluder" includes="**/*.jar"/>
  </path>

  <!-- ======================================================================================= -->
  <!-- task declarations                                                                      -->
  <!-- ======================================================================================= -->

  <taskdef classpathref="path.xinclude" name="xinclude" classname="org.znerd.xincludetask.XIncludeTask" />
  
  <!-- ======================================================================================= -->
  <!-- cleans everything                                                                       -->
  <!-- ======================================================================================= -->
  <target name="clean">
    <delete dir="${build.dir}" />
  </target>

  <!-- ======================================================================================= -->
  <!-- compile                                                                                 -->
  <!-- ======================================================================================= -->
  <target name="compile" description="compile all source files">
    <mkdir dir="${build.classes.dir}" />
    <depend srcDir="${src.main.dir}" destDir="${build.classes.dir}" cache="${build.cache.dir}" />
    <javac srcdir="${src.main.dir}" 
      encoding="${encoding}"
      destdir="${build.classes.dir}"
      debug="${debug}" 
      target="${targetJvm}"
      includes="**"
      includeantruntime="true"
      classpathref="project.classpath" 
    />
    <copy file="${src.main.dir}/svnantlib.xml" todir="${build.classes.dir}/org/tigris/subversion/svnant" />
  </target>

  <!-- ======================================================================================= -->
  <!-- create svnant.jar                                                                       -->
  <!-- ======================================================================================= -->
  <target name="svnant.jar" depends="compile" description="generate svnant.jar">
    <tstamp />
    <mkdir dir="${build.lib.dir}" />
    <jar jarfile="${build.lib.dir}/svnant.jar" basedir="${build.classes.dir}" excludes="**/*Test*.class">
      <manifest>
        <section name="org.tigris.subversion.svnant">
          <attribute name="Specification-Title" value="svnant" />
          <attribute name="Specification-Version" value="${svnant.version}" />
          <attribute name="Implementation-Title" value="org.tigris.subversion.svnant" />
          <attribute name="Implementation-Version" value="${svnant.version} (${TODAY})" />
        </section>
      </manifest>
    </jar>
  </target>

  <!-- ======================================================================================= -->
  <!-- compile docs                                                                            -->
  <!-- ======================================================================================= -->
  
  <target name="docs" depends="" description="generate documentation">
    
    <mkdir dir="${build.distrib.dir}/doc" />
    
    <tempfile property="file.temporary" deleteonexit="true"/>
    
    <xinclude in="${src.doc.dir}/tasks/svntask.xml" out="${file.temporary}"/>
    <xslt in="${file.temporary}" out="${build.distrib.dir}/doc/svn.html" style="${src.doc.dir}/antdoc.xsl"/>
    
    <xinclude in="${src.doc.dir}/conditions/conditions.xml" out="${file.temporary}"/>
    <xslt in="${file.temporary}" out="${build.distrib.dir}/doc/conditions.html" style="${src.doc.dir}/antdoc.xsl"/>
      
    <xinclude in="${src.doc.dir}/selectors/selectors.xml" out="${file.temporary}"/>
    <xslt in="${file.temporary}" out="${build.distrib.dir}/doc/selectors.html" style="${src.doc.dir}/antdoc.xsl"/>
    
    <xinclude in="${src.doc.dir}/types/types.xml" out="${file.temporary}"/>
    <xslt in="${file.temporary}" out="${build.distrib.dir}/doc/types.html" style="${src.doc.dir}/antdoc.xsl"/>
      
    <xinclude in="${src.doc.dir}/introduction.xml" out="${file.temporary}"/>
    <xslt in="${file.temporary}" out="${build.distrib.dir}/doc/introduction.html" style="${src.doc.dir}/antdoc.xsl"/>
      
    <copy todir="${build.distrib.dir}/doc" overwrite="true">
      <fileset dir="${src.doc.dir}" includes="*.html"/>
    </copy>
  </target>

  <!-- ======================================================================================= -->
  <!-- compile junit test classes                                                              -->
  <!-- ======================================================================================= -->
  <target name="compileTests" description="compile junit sources files">
    <mkdir dir="${build.classes.dir}" />
    <javac srcdir="${src.testcases.dir}" 
      destdir="${build.classes.dir}" 
      debug="${debug}" 
      includes="**" 
      target="${targetJvm}"
      includeantruntime="true"
      encoding="${encoding}"
      classpathref="project.classpath">
    </javac>
  </target>


  <!-- ======================================================================================= -->
  <!-- run junit tests                                                                         -->
  <!-- ======================================================================================= -->
  <target name="runTests" depends="svnant.jar,compileTests" description="run junit tests">
    <echo message="Please wait, tests can take a long time to execute...." level="info" />
    <junit printsummary="yes" fork="yes" haltonfailure="false">
      <jvmarg value="-Djava.library.path=${lib.jni.dir}"/>
      <classpath>
        <pathelement location="${build.classes.dir}" />
        <path refid="project.classpath" />
      </classpath>
      <formatter type="xml" />
      <test name="org.tigris.subversion.svnant.SvnJavaHLTest" fork="yes" />
      <test name="org.tigris.subversion.svnant.SvnSvnKitTest" fork="yes" />
      <test name="org.tigris.subversion.svnant.SvnCmdLineTest" fork="yes" />
    </junit>
  </target>

  <!-- ======================================================================================= -->
  <!-- make distribution                                                                       -->
  <!-- ======================================================================================= -->
  <target name="makeDistrib" depends="clean, svnant.jar, docs" description="make binary distribution">
    <mkdir dir="${build.distrib.dir}" />
    <mkdir dir="${build.distrib.dir}/lib" />
    <copy todir="${build.distrib.dir}">
      <fileset dir="${dir.project}">
        <include name="readme.txt"/>
        <include name="changelog.txt"/>
        <include name="license.txt"/>
      </fileset>
    </copy>
    <copy todir="${build.distrib.dir}/lib">
      <fileset dir="${dir.project}/lib/svnclientadapter/lib" includes="*-LICENSE"/>
      <fileset dir="${dir.project}/lib/svnclientadapter/lib" includes="*.jar"/>
      <fileset dir="${dir.project}/lib/svnkit" includes="jna*"/>
    </copy>
    <copy file="${dir.project}/lib/svnclientadapter/license.txt" tofile="${build.distrib.dir}/lib/SVNCLIENTADAPTER-LICENSE"/>
    <copy file="${build.lib.dir}/svnant.jar"           todir="${build.distrib.dir}/lib" />
    <copy file="${distribfiles.dir}/build.xml"         todir="${build.distrib.dir}"/>
    
    <copy file="${distribfiles.dir}/build.properties"  todir="${build.distrib.dir}">
      <filterset>
        <filter token="SVNANTVERSION" value="${svnant.version}" />
      </filterset>
    </copy>
    
    <copy file="${distribfiles.dir}/release-announcement-template.txt" todir="${build.dir}">
      <filterset>
        <filter token="SVNANTVERSION" value="${svnant.version}" />
      </filterset>
    </copy>
    
    <condition property="revision" value="unknown" else="${env.SVN_REVISION}">
      <equals arg1="${env.SVN_REVISION}" arg2="$${env.SVN_REVISION}"/>
    </condition>
    
    <echo file="${build.distrib.dir}/releaseinfo.txt">DEVELOPMENT RELEASE OF REVISION: ${revision}</echo>
    
    <zip destfile="${build.dir}/svnant-${svnant.version}-${revision}.zip">
      <zipfileset dir="${build.distrib.dir}" prefix="svnant-${svnant.version}" />
    </zip>
    
  </target>

  <!-- create all jar files -->
  <target name="all" depends="svnant.jar">
  </target>

</project>
