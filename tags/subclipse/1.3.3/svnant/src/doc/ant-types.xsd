<?xml version="1.0" encoding="UTF-8"?>
<xs:schema 
	targetNamespace="http://www.fiset.ca/ant-docs/v1"
	xmlns="http://www.fiset.ca/ant-docs/v1"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	elementFormDefault="qualified"
	attributeFormDefault="unqualified"
>
	<xs:annotation>
		<xs:documentation xml:lang="en">
			This schema should be used to document types used in ANT, an Apache project, which is a to 
			to define build processes. This schema defines the struture of an XML document that should be
			used to capture information about extensions to the types offered by Ant, such as tasks,
			selectors and the like. Tools, such as a stylesheet, can then interpret the XML document
			and generate human-friendly documentation relating to your types.
		</xs:documentation>
	</xs:annotation>
	
	<!-- Root node -->
	<xs:element name="types">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				Root element for ant-types documents. It is made of a title, a preamble text and a set of
				defined types.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<!-- Title -->
				<xs:element name="title" type="xs:string">
					<xs:annotation>
						<xs:documentation xml:lang="en">Title of this document</xs:documentation>
					</xs:annotation>
				</xs:element>
				<!-- Introduction text -->
				<xs:element name="introduction">
					<xs:annotation>
						<xs:documentation xml:lang="en">
							Introductory text to the set of types. HTML tags can be used within this field.
						</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:any namespace="##any" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<!-- Type [0-n] -->
				<xs:element name="type" type="type" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<!-- ****************************************	-->
	<xs:complexType name="type">
		<xs:annotation>
			<xs:documentation xml:lang="en">This element is used to describe a single ANT type</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<!-- Short description -->
			<xs:element name="shortDescription" type="xs:string">
				<xs:annotation>
					<xs:documentation xml:lang="en">One line description of type, used for tables of content and similar indexing</xs:documentation>
				</xs:annotation>
			</xs:element>
			<!-- Full description -->
			<xs:element name="fullDescription">
				<xs:annotation>
					<xs:documentation xml:lang="en">Full description of type. HTML tags can be used within this field.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:any namespace="##any" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!-- Parameters -->
			<xs:element name="parameter" type="parameter" minOccurs="0" maxOccurs="unbounded"/>
			<!-- Nested Elements -->
			<xs:element name="nestedType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">Specifies a nested element for the described type.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="description">
							<xs:annotation>
								<xs:documentation xml:lang="en">Description of the nested type. HTML tags can be used within this field.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:any namespace="##any" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="name" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation xml:lang="en">Specifies the usual name for a nested type. For example: fileset, pattern.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="className" type="xs:string" use="optional">
						<xs:annotation>
							<xs:documentation xml:lang="en">Specifies the name of the class that implement the nested type.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<!-- Name -->
		<xs:attribute name="name" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">Specifies the usual name for a type. For example: copy, delete.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<!-- Class name -->
		<xs:attribute name="className" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">Specifies the name of the class that implement this type.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<!-- ****************************************	-->
	<xs:complexType name="parameter">
		<xs:annotation>
			<xs:documentation xml:lang="en">This element is used to describe a single parameter within a type.</xs:documentation>
		</xs:annotation>
		<xs:all>
			<!-- Description -->
			<xs:element name="description">
				<xs:annotation>
					<xs:documentation xml:lang="en">Description of the parameter. HTML tags can be used within this field.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:any namespace="##any" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!-- Required -->
			<xs:element name="required">
				<xs:annotation>
					<xs:documentation xml:lang="en">Description of the parameter's requirements. HTML tags can be used within this field.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:any namespace="##any" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:all>
		<!-- Name -->
		<xs:attribute name="name" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="en">The name of the attribute</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<!-- ****************************************	-->
	<xs:complexType name="example" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				This free form element can be used within fields where HTML is allowed. It
				defines text that should be highlighted as an example. 
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:any namespace="##any" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
			
</xs:schema>
